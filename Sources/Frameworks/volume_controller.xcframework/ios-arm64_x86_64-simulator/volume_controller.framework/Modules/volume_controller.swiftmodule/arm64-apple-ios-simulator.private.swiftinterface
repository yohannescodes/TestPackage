// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name volume_controller
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import Flutter
import Foundation
import MediaPlayer
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import volume_controller
@objc @_inheritsConvenienceInitializers public class SwiftVolumeControllerPlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin {
  @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers public class VolumeObserver {
  public func getVolume() -> Swift.Float?
  public func setVolume(volume: Swift.Float, showSystemUI: Swift.Bool)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VolumeListener : ObjectiveC.NSObject, Flutter.FlutterStreamHandler {
  @objc public func onListen(withArguments arguments: Any?, eventSink events: @escaping Flutter.FlutterEventSink) -> Flutter.FlutterError?
  @objc public func onCancel(withArguments arguments: Any?) -> Flutter.FlutterError?
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @objc override dynamic public init()
  @objc deinit
}
