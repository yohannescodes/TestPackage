// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name screen_brightness_ios
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Flutter
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import screen_brightness_ios
@objc @_inheritsConvenienceInitializers open class BaseStreamHandler : ObjectiveC.NSObject, Flutter.FlutterStreamHandler {
  @objc public func onListen(withArguments arguments: Any?, eventSink events: @escaping Flutter.FlutterEventSink) -> Flutter.FlutterError?
  @objc public func onCancel(withArguments arguments: Any?) -> Flutter.FlutterError?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class CurrentBrightnessChangeStreamHandler : screen_brightness_ios.BaseStreamHandler {
  public func addCurrentBrightnessToEventSink(_ currentBrightness: CoreFoundation.CGFloat)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class SwiftScreenBrightnessIosPlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin, Flutter.FlutterApplicationLifeCycleDelegate {
  @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  public func setScreenBrightness(targetBrightness: CoreFoundation.CGFloat, animated: Swift.Bool, duration: Foundation.TimeInterval = 1.0)
  @objc public func applicationWillResignActive(_ application: UIKit.UIApplication)
  @objc public func applicationDidBecomeActive(_ application: UIKit.UIApplication)
  @objc public func applicationWillTerminate(_ application: UIKit.UIApplication)
  @objc public func detachFromEngine(for registrar: any Flutter.FlutterPluginRegistrar)
  @objc deinit
}
